// source: ad.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var property_type_pb = require('../property-type/property_type_pb');
goog.object.extend(proto, property_type_pb);
goog.exportSymbol('proto.AdDetailsMessage', null, global);
goog.exportSymbol('proto.AdIdMessage', null, global);
goog.exportSymbol('proto.AdImageMessage', null, global);
goog.exportSymbol('proto.AdMessage', null, global);
goog.exportSymbol('proto.CreateAdResponse', null, global);
goog.exportSymbol('proto.DeleteAdResponse', null, global);
goog.exportSymbol('proto.MyAdMessage', null, global);
goog.exportSymbol('proto.SearchAdMessage', null, global);
goog.exportSymbol('proto.SearchAdResultMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AdMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.AdMessage.repeatedFields_, null);
};
goog.inherits(proto.AdMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AdMessage.displayName = 'proto.AdMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AdImageMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AdImageMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AdImageMessage.displayName = 'proto.AdImageMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CreateAdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CreateAdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CreateAdResponse.displayName = 'proto.CreateAdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SearchAdMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SearchAdMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SearchAdMessage.displayName = 'proto.SearchAdMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SearchAdResultMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SearchAdResultMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SearchAdResultMessage.displayName = 'proto.SearchAdResultMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AdIdMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AdIdMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AdIdMessage.displayName = 'proto.AdIdMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.AdDetailsMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.AdDetailsMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.AdDetailsMessage.displayName = 'proto.AdDetailsMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.MyAdMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.MyAdMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.MyAdMessage.displayName = 'proto.MyAdMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DeleteAdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DeleteAdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DeleteAdResponse.displayName = 'proto.DeleteAdResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.AdMessage.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AdMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.AdMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AdMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    propertyId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    durationLimited: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    startDate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    guestPreference: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pricePerNight: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    securityDeposit: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    additionalInfo: jspb.Message.getFieldWithDefault(msg, 9, ""),
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.AdImageMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AdMessage}
 */
proto.AdMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AdMessage;
  return proto.AdMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AdMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AdMessage}
 */
proto.AdMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPropertyId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDurationLimited(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuestPreference(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPricePerNight(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecurityDeposit(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditionalInfo(value);
      break;
    case 10:
      var value = new proto.AdImageMessage;
      reader.readMessage(value,proto.AdImageMessage.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AdMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AdMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AdMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPropertyId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDurationLimited();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGuestPreference();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPricePerNight();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSecurityDeposit();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getAdditionalInfo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.AdImageMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.AdMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 property_id = 2;
 * @return {number}
 */
proto.AdMessage.prototype.getPropertyId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setPropertyId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool duration_limited = 3;
 * @return {boolean}
 */
proto.AdMessage.prototype.getDurationLimited = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setDurationLimited = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string start_date = 4;
 * @return {string}
 */
proto.AdMessage.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string end_date = 5;
 * @return {string}
 */
proto.AdMessage.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string guest_preference = 6;
 * @return {string}
 */
proto.AdMessage.prototype.getGuestPreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setGuestPreference = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double price_per_night = 7;
 * @return {number}
 */
proto.AdMessage.prototype.getPricePerNight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setPricePerNight = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double security_deposit = 8;
 * @return {number}
 */
proto.AdMessage.prototype.getSecurityDeposit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setSecurityDeposit = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string additional_info = 9;
 * @return {string}
 */
proto.AdMessage.prototype.getAdditionalInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.setAdditionalInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated AdImageMessage images = 10;
 * @return {!Array<!proto.AdImageMessage>}
 */
proto.AdMessage.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.AdImageMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.AdImageMessage, 10));
};


/**
 * @param {!Array<!proto.AdImageMessage>} value
 * @return {!proto.AdMessage} returns this
*/
proto.AdMessage.prototype.setImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.AdImageMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.AdImageMessage}
 */
proto.AdMessage.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.AdImageMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.AdMessage} returns this
 */
proto.AdMessage.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AdImageMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.AdImageMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AdImageMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdImageMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    picByte: msg.getPicByte_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AdImageMessage}
 */
proto.AdImageMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AdImageMessage;
  return proto.AdImageMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AdImageMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AdImageMessage}
 */
proto.AdImageMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPicByte(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AdImageMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AdImageMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AdImageMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdImageMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPicByte_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.AdImageMessage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdImageMessage} returns this
 */
proto.AdImageMessage.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.AdImageMessage.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdImageMessage} returns this
 */
proto.AdImageMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes pic_byte = 3;
 * @return {!(string|Uint8Array)}
 */
proto.AdImageMessage.prototype.getPicByte = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes pic_byte = 3;
 * This is a type-conversion wrapper around `getPicByte()`
 * @return {string}
 */
proto.AdImageMessage.prototype.getPicByte_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPicByte()));
};


/**
 * optional bytes pic_byte = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPicByte()`
 * @return {!Uint8Array}
 */
proto.AdImageMessage.prototype.getPicByte_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPicByte()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.AdImageMessage} returns this
 */
proto.AdImageMessage.prototype.setPicByte = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CreateAdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CreateAdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CreateAdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ad: (f = msg.getAd()) && proto.AdMessage.toObject(includeInstance, f),
    returnMessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CreateAdResponse}
 */
proto.CreateAdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CreateAdResponse;
  return proto.CreateAdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CreateAdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CreateAdResponse}
 */
proto.CreateAdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.AdMessage;
      reader.readMessage(value,proto.AdMessage.deserializeBinaryFromReader);
      msg.setAd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CreateAdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CreateAdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CreateAdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CreateAdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAd();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.AdMessage.serializeBinaryToWriter
    );
  }
  f = message.getReturnMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional AdMessage ad = 1;
 * @return {?proto.AdMessage}
 */
proto.CreateAdResponse.prototype.getAd = function() {
  return /** @type{?proto.AdMessage} */ (
    jspb.Message.getWrapperField(this, proto.AdMessage, 1));
};


/**
 * @param {?proto.AdMessage|undefined} value
 * @return {!proto.CreateAdResponse} returns this
*/
proto.CreateAdResponse.prototype.setAd = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CreateAdResponse} returns this
 */
proto.CreateAdResponse.prototype.clearAd = function() {
  return this.setAd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CreateAdResponse.prototype.hasAd = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string return_message = 2;
 * @return {string}
 */
proto.CreateAdResponse.prototype.getReturnMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CreateAdResponse} returns this
 */
proto.CreateAdResponse.prototype.setReturnMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SearchAdMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.SearchAdMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SearchAdMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SearchAdMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    startDate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    guestPreference: jspb.Message.getFieldWithDefault(msg, 4, ""),
    country: jspb.Message.getFieldWithDefault(msg, 5, ""),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    sizeMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    sizeMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    numberOfRoomsMin: jspb.Message.getFieldWithDefault(msg, 10, 0),
    numberOfRoomsMax: jspb.Message.getFieldWithDefault(msg, 11, 0),
    distanceFromCenterMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    distanceFromCenterMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    priceMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    priceMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    furnished: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    internetIncluded: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    airConditionIncluded: jspb.Message.getBooleanFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SearchAdMessage}
 */
proto.SearchAdMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SearchAdMessage;
  return proto.SearchAdMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SearchAdMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SearchAdMessage}
 */
proto.SearchAdMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuestPreference(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSizeMin(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSizeMax(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberOfRoomsMin(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberOfRoomsMax(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceFromCenterMin(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceFromCenterMax(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceMin(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriceMax(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFurnished(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInternetIncluded(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAirConditionIncluded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SearchAdMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SearchAdMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SearchAdMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SearchAdMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGuestPreference();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSizeMin();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getSizeMax();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getNumberOfRoomsMin();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getNumberOfRoomsMax();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getDistanceFromCenterMin();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getDistanceFromCenterMax();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getPriceMin();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getPriceMax();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getFurnished();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getInternetIncluded();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getAirConditionIncluded();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional string start_date = 1;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end_date = 2;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string guest_preference = 4;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getGuestPreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setGuestPreference = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string country = 5;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string city = 6;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.SearchAdMessage.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double size_min = 8;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getSizeMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setSizeMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double size_max = 9;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getSizeMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setSizeMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional int32 number_of_rooms_min = 10;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getNumberOfRoomsMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setNumberOfRoomsMin = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 number_of_rooms_max = 11;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getNumberOfRoomsMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setNumberOfRoomsMax = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional double distance_from_center_min = 12;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getDistanceFromCenterMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setDistanceFromCenterMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double distance_from_center_max = 13;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getDistanceFromCenterMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setDistanceFromCenterMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double price_min = 14;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getPriceMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setPriceMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double price_max = 15;
 * @return {number}
 */
proto.SearchAdMessage.prototype.getPriceMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setPriceMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional bool furnished = 16;
 * @return {boolean}
 */
proto.SearchAdMessage.prototype.getFurnished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setFurnished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool internet_included = 17;
 * @return {boolean}
 */
proto.SearchAdMessage.prototype.getInternetIncluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setInternetIncluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool air_condition_included = 18;
 * @return {boolean}
 */
proto.SearchAdMessage.prototype.getAirConditionIncluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SearchAdMessage} returns this
 */
proto.SearchAdMessage.prototype.setAirConditionIncluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SearchAdResultMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.SearchAdResultMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SearchAdResultMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SearchAdResultMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    country: jspb.Message.getFieldWithDefault(msg, 5, ""),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    securityDeposit: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    image: (f = msg.getImage()) && proto.AdImageMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SearchAdResultMessage}
 */
proto.SearchAdResultMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SearchAdResultMessage;
  return proto.SearchAdResultMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SearchAdResultMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SearchAdResultMessage}
 */
proto.SearchAdResultMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecurityDeposit(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 10:
      var value = new proto.AdImageMessage;
      reader.readMessage(value,proto.AdImageMessage.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SearchAdResultMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SearchAdResultMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SearchAdResultMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SearchAdResultMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSecurityDeposit();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.AdImageMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.SearchAdResultMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string start_date = 2;
 * @return {string}
 */
proto.SearchAdResultMessage.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string end_date = 3;
 * @return {string}
 */
proto.SearchAdResultMessage.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.SearchAdResultMessage.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string country = 5;
 * @return {string}
 */
proto.SearchAdResultMessage.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string city = 6;
 * @return {string}
 */
proto.SearchAdResultMessage.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.SearchAdResultMessage.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double security_deposit = 8;
 * @return {number}
 */
proto.SearchAdResultMessage.prototype.getSecurityDeposit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setSecurityDeposit = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double price = 9;
 * @return {number}
 */
proto.SearchAdResultMessage.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional AdImageMessage image = 10;
 * @return {?proto.AdImageMessage}
 */
proto.SearchAdResultMessage.prototype.getImage = function() {
  return /** @type{?proto.AdImageMessage} */ (
    jspb.Message.getWrapperField(this, proto.AdImageMessage, 10));
};


/**
 * @param {?proto.AdImageMessage|undefined} value
 * @return {!proto.SearchAdResultMessage} returns this
*/
proto.SearchAdResultMessage.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SearchAdResultMessage} returns this
 */
proto.SearchAdResultMessage.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SearchAdResultMessage.prototype.hasImage = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AdIdMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.AdIdMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AdIdMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdIdMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AdIdMessage}
 */
proto.AdIdMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AdIdMessage;
  return proto.AdIdMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AdIdMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AdIdMessage}
 */
proto.AdIdMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AdIdMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AdIdMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AdIdMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdIdMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.AdIdMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.AdIdMessage} returns this
 */
proto.AdIdMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.AdDetailsMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.AdDetailsMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.AdDetailsMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdDetailsMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    startDate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    postingDate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    securityDeposit: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    guestPreference: jspb.Message.getFieldWithDefault(msg, 7, ""),
    additionalInfo: jspb.Message.getFieldWithDefault(msg, 8, ""),
    type: jspb.Message.getFieldWithDefault(msg, 9, ""),
    country: jspb.Message.getFieldWithDefault(msg, 10, ""),
    city: jspb.Message.getFieldWithDefault(msg, 11, ""),
    address: jspb.Message.getFieldWithDefault(msg, 12, ""),
    size: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    numberOfRooms: jspb.Message.getFieldWithDefault(msg, 14, 0),
    distanceFromCenter: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    furnished: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    internetIncluded: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    airConditionIncluded: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    averageRating: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.AdDetailsMessage}
 */
proto.AdDetailsMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.AdDetailsMessage;
  return proto.AdDetailsMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.AdDetailsMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.AdDetailsMessage}
 */
proto.AdDetailsMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostingDate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSecurityDeposit(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuestPreference(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditionalInfo(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberOfRooms(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceFromCenter(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFurnished(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInternetIncluded(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAirConditionIncluded(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageRating(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.AdDetailsMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.AdDetailsMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.AdDetailsMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.AdDetailsMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPostingDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSecurityDeposit();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getGuestPreference();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAdditionalInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getNumberOfRooms();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getDistanceFromCenter();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getFurnished();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getInternetIncluded();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getAirConditionIncluded();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getAverageRating();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string start_date = 2;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string end_date = 3;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string posting_date = 4;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getPostingDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setPostingDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double price = 5;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double security_deposit = 6;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getSecurityDeposit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setSecurityDeposit = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional string guest_preference = 7;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getGuestPreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setGuestPreference = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string additional_info = 8;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getAdditionalInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setAdditionalInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string type = 9;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string country = 10;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string city = 11;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string address = 12;
 * @return {string}
 */
proto.AdDetailsMessage.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional double size = 13;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional int32 number_of_rooms = 14;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getNumberOfRooms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setNumberOfRooms = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional double distance_from_center = 15;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getDistanceFromCenter = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setDistanceFromCenter = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional bool furnished = 16;
 * @return {boolean}
 */
proto.AdDetailsMessage.prototype.getFurnished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setFurnished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool internet_included = 17;
 * @return {boolean}
 */
proto.AdDetailsMessage.prototype.getInternetIncluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setInternetIncluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool air_condition_included = 18;
 * @return {boolean}
 */
proto.AdDetailsMessage.prototype.getAirConditionIncluded = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setAirConditionIncluded = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional double average_rating = 19;
 * @return {number}
 */
proto.AdDetailsMessage.prototype.getAverageRating = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.AdDetailsMessage} returns this
 */
proto.AdDetailsMessage.prototype.setAverageRating = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.MyAdMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.MyAdMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.MyAdMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MyAdMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    country: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    postingDate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    startDate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    image: (f = msg.getImage()) && proto.AdImageMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.MyAdMessage}
 */
proto.MyAdMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.MyAdMessage;
  return proto.MyAdMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.MyAdMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.MyAdMessage}
 */
proto.MyAdMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostingDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 9:
      var value = new proto.AdImageMessage;
      reader.readMessage(value,proto.AdImageMessage.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.MyAdMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.MyAdMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.MyAdMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.MyAdMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPostingDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.AdImageMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.MyAdMessage.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string country = 2;
 * @return {string}
 */
proto.MyAdMessage.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setCountry = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.MyAdMessage.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.MyAdMessage.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string posting_date = 5;
 * @return {string}
 */
proto.MyAdMessage.prototype.getPostingDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setPostingDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string start_date = 6;
 * @return {string}
 */
proto.MyAdMessage.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string end_date = 7;
 * @return {string}
 */
proto.MyAdMessage.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional double price = 8;
 * @return {number}
 */
proto.MyAdMessage.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional AdImageMessage image = 9;
 * @return {?proto.AdImageMessage}
 */
proto.MyAdMessage.prototype.getImage = function() {
  return /** @type{?proto.AdImageMessage} */ (
    jspb.Message.getWrapperField(this, proto.AdImageMessage, 9));
};


/**
 * @param {?proto.AdImageMessage|undefined} value
 * @return {!proto.MyAdMessage} returns this
*/
proto.MyAdMessage.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.MyAdMessage} returns this
 */
proto.MyAdMessage.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.MyAdMessage.prototype.hasImage = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DeleteAdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DeleteAdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DeleteAdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteAdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returnMessage: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DeleteAdResponse}
 */
proto.DeleteAdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DeleteAdResponse;
  return proto.DeleteAdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DeleteAdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DeleteAdResponse}
 */
proto.DeleteAdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DeleteAdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DeleteAdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DeleteAdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DeleteAdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturnMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string return_message = 1;
 * @return {string}
 */
proto.DeleteAdResponse.prototype.getReturnMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.DeleteAdResponse} returns this
 */
proto.DeleteAdResponse.prototype.setReturnMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto);
